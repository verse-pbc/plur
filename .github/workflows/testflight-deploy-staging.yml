name: TestFlight Staging Deployment
permissions:
  contents: write  # This is needed for tag pushing
on:
  #push:
  #  branches:
  #    - main
  # Enable manual run
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  fastlane-deploy:
    runs-on: macOS-15 # Use a runner known to have multiple Xcode versions
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # Use stable version tag
        with:
          submodules: 'recursive'
      
      # Add step to select specific Xcode version
      - name: Select Xcode 16.2
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2' # Pinning to known working version

      # Keep Flutter SDK setup via cloning for specific version
      - name: Clone Flutter SDK
        run: |
          git clone --branch dev https://github.com/flutter/flutter.git flutter
          cd flutter
          git fetch --tags --depth=1
          git checkout 3.32.0-0.3.pre # Your specific pre-release tag
          ./bin/flutter precache --ios
      - name: Add Flutter to PATH
        run: echo "${{ github.workspace }}/flutter/bin" >> $GITHUB_PATH

      - name: Install Flutter Dependencies
        run: flutter pub get
      
      # Use the standard flutter build command 
      - name: Build Flutter .app
        env:
          SENTRY_DSN: ${{secrets.SENTRY_DSN}}
        run: flutter build ios --release --no-codesign --flavor Runner-Staging --dart-define=ENVIRONMENT="staging" --dart-define=SENTRY_DSN="$SENTRY_DSN"
      
      # Removed nomasystems/action-xcode-select as we now use maxim-lobanov/setup-xcode
      # - uses: nomasystems/action-xcode-select@v0.1 

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      
      # Ensure bundler is installed and run pod install before fastlane
      - name: Setup Ruby and Install Pods
        working-directory: ./ios
        run: |
          gem install bundler
          bundle install
          bundle exec pod install --repo-update
      
      - name: Fastlane build and deploy
        working-directory: ./fastlane
        run: |
          # bundle install should already be done by previous step
          bundle exec fastlane ios deploy_staging
        env:
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          KEYCHAIN_PASS: ${{ secrets.KEYCHAIN_PASS }}
          SENTRY_AUTH: ${{ secrets.SENTRY_AUTH }}
          APP_SECRETS: ${{ secrets.APP_SECRETS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true
          
      - name: Upload debug symbols to Sentry
        env:
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
        run: dart run sentry_dart_plugin --sentry-define=auth_token="$SENTRY_AUTH_TOKEN"
