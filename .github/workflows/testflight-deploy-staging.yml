name: TestFlight Staging Deployment
permissions:
  contents: write  # This is needed for tag pushing
on:
  #push:
  #  branches:
  #    - main
  # Enable manual run
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  fastlane-deploy:
    runs-on: macOS-15
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          submodules: 'recursive'
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version-file: pubspec.yaml
          channel: 'stable'
      - name: Install Flutter Dependencies
        run: flutter pub get
      - name: Build Flutter .app
        env:
          SENTRY_DSN: ${{secrets.SENTRY_DSN}}
        run: flutter build ios --release --no-codesign --flavor Runner-Staging --dart-define=SENTRY_DSN="$SENTRY_DSN" --dart-define=ENVIRONMENT="staging"
      - uses: nomasystems/action-xcode-select@v0.1
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ Secrets.SSH_KEY }}
          known_hosts: ${{ Secrets.KNOWN_HOSTS }}
      - name: Fastlane build and deploy
        working-directory: ./fastlane
        run: |
          bundle install
          bundle exec fastlane ios deploy_staging
        env:
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ Secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ Secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_ID: ${{ Secrets.APP_STORE_CONNECT_API_KEY_ID }}
          MATCH_PASSWORD: ${{ Secrets.MATCH_PASSWORD }}
          KEYCHAIN_PASS: ${{ Secrets.KEYCHAIN_PASS }}
          SENTRY_AUTH: ${{ Secrets.SENTRY_AUTH }}
          APP_SECRETS: ${{ Secrets.APP_SECRETS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true
      - name: Upload debug symbols to Sentry
        env:
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
        run: dart run sentry_dart_plugin --sentry-define=auth_token="$SENTRY_AUTH_TOKEN"
