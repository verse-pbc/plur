// Mocks generated by Mockito 5.4.4 from annotations
// in nostrmo/test/util/notification_util_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:firebase_core/firebase_core.dart' as _i4;
import 'package:firebase_messaging/firebase_messaging.dart' as _i11;
import 'package:firebase_messaging_platform_interface/firebase_messaging_platform_interface.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:nostr_sdk/event.dart' as _i9;
import 'package:nostr_sdk/nip02/contact_list.dart' as _i10;
import 'package:nostr_sdk/nostr.dart' as _i6;
import 'package:nostr_sdk/relay/relay.dart' as _i3;
import 'package:nostr_sdk/signer/nostr_signer.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNostrSigner_0 extends _i1.SmartFake implements _i2.NostrSigner {
  _FakeNostrSigner_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRelay_1 extends _i1.SmartFake implements _i3.Relay {
  _FakeRelay_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_2 extends _i1.SmartFake implements _i4.FirebaseApp {
  _FakeFirebaseApp_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationSettings_3 extends _i1.SmartFake
    implements _i5.NotificationSettings {
  _FakeNotificationSettings_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Nostr].
///
/// See the documentation for Mockito's code generation for more information.
class MockNostr extends _i1.Mock implements _i6.Nostr {
  MockNostr() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NostrSigner get nostrSigner => (super.noSuchMethod(
        Invocation.getter(#nostrSigner),
        returnValue: _FakeNostrSigner_0(
          this,
          Invocation.getter(#nostrSigner),
        ),
      ) as _i2.NostrSigner);

  @override
  set nostrSigner(_i2.NostrSigner? _nostrSigner) => super.noSuchMethod(
        Invocation.setter(
          #nostrSigner,
          _nostrSigner,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onNotice(
          dynamic Function(
            String,
            String,
          )? _onNotice) =>
      super.noSuchMethod(
        Invocation.setter(
          #onNotice,
          _onNotice,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Relay Function(String) get tempRelayGener => (super.noSuchMethod(
        Invocation.getter(#tempRelayGener),
        returnValue: (String __p0) => _FakeRelay_1(
          this,
          Invocation.getter(#tempRelayGener),
        ),
      ) as _i3.Relay Function(String));

  @override
  set tempRelayGener(_i3.Relay Function(String)? _tempRelayGener) =>
      super.noSuchMethod(
        Invocation.setter(
          #tempRelayGener,
          _tempRelayGener,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get publicKey => (super.noSuchMethod(
        Invocation.getter(#publicKey),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.getter(#publicKey),
        ),
      ) as String);

  @override
  _i8.Future<_i9.Event?> sendLike(
    String? id, {
    String? pubkey,
    String? content,
    List<String>? tempRelays,
    List<String>? targetRelays,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendLike,
          [id],
          {
            #pubkey: pubkey,
            #content: content,
            #tempRelays: tempRelays,
            #targetRelays: targetRelays,
          },
        ),
        returnValue: _i8.Future<_i9.Event?>.value(),
      ) as _i8.Future<_i9.Event?>);

  @override
  _i8.Future<_i9.Event?> deleteEvent(
    String? eventId, {
    List<String>? tempRelays,
    List<String>? targetRelays,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteEvent,
          [eventId],
          {
            #tempRelays: tempRelays,
            #targetRelays: targetRelays,
          },
        ),
        returnValue: _i8.Future<_i9.Event?>.value(),
      ) as _i8.Future<_i9.Event?>);

  @override
  _i8.Future<_i9.Event?> deleteEvents(
    List<String>? eventIds, {
    List<String>? tempRelays,
    List<String>? targetRelays,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteEvents,
          [eventIds],
          {
            #tempRelays: tempRelays,
            #targetRelays: targetRelays,
          },
        ),
        returnValue: _i8.Future<_i9.Event?>.value(),
      ) as _i8.Future<_i9.Event?>);

  @override
  _i8.Future<_i9.Event?> sendRepost(
    String? id, {
    String? relayAddr,
    String? content = r'',
    List<String>? tempRelays,
    List<String>? targetRelays,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendRepost,
          [id],
          {
            #relayAddr: relayAddr,
            #content: content,
            #tempRelays: tempRelays,
            #targetRelays: targetRelays,
          },
        ),
        returnValue: _i8.Future<_i9.Event?>.value(),
      ) as _i8.Future<_i9.Event?>);

  @override
  _i8.Future<_i9.Event?> sendContactList(
    _i10.ContactList? contacts,
    String? content, {
    List<String>? tempRelays,
    List<String>? targetRelays,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendContactList,
          [
            contacts,
            content,
          ],
          {
            #tempRelays: tempRelays,
            #targetRelays: targetRelays,
          },
        ),
        returnValue: _i8.Future<_i9.Event?>.value(),
      ) as _i8.Future<_i9.Event?>);

  @override
  _i8.Future<_i9.Event?> sendEvent(
    _i9.Event? event, {
    List<String>? tempRelays,
    List<String>? targetRelays,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEvent,
          [event],
          {
            #tempRelays: tempRelays,
            #targetRelays: targetRelays,
          },
        ),
        returnValue: _i8.Future<_i9.Event?>.value(),
      ) as _i8.Future<_i9.Event?>);

  @override
  void checkEventSign(_i9.Event? event) => super.noSuchMethod(
        Invocation.method(
          #checkEventSign,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> signEvent(_i9.Event? event) => (super.noSuchMethod(
        Invocation.method(
          #signEvent,
          [event],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i9.Event? broadcast(
    _i9.Event? event, {
    List<String>? tempRelays,
    List<String>? targetRelays,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #broadcast,
        [event],
        {
          #tempRelays: tempRelays,
          #targetRelays: targetRelays,
        },
      )) as _i9.Event?);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addInitQuery(
    List<Map<String, dynamic>>? filters,
    dynamic Function(_i9.Event)? onEvent, {
    String? id,
    Function? onComplete,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #addInitQuery,
          [
            filters,
            onEvent,
          ],
          {
            #id: id,
            #onComplete: onComplete,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool tempRelayHasSubscription(String? relayAddr) => (super.noSuchMethod(
        Invocation.method(
          #tempRelayHasSubscription,
          [relayAddr],
        ),
        returnValue: false,
      ) as bool);

  @override
  String subscribe(
    List<Map<String, dynamic>>? filters,
    dynamic Function(_i9.Event)? onEvent, {
    String? id,
    List<String>? tempRelays,
    List<String>? targetRelays,
    List<int>? relayTypes = const [
      1,
      2,
      3,
      4,
    ],
    bool? sendAfterAuth = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribe,
          [
            filters,
            onEvent,
          ],
          {
            #id: id,
            #tempRelays: tempRelays,
            #targetRelays: targetRelays,
            #relayTypes: relayTypes,
            #sendAfterAuth: sendAfterAuth,
          },
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #subscribe,
            [
              filters,
              onEvent,
            ],
            {
              #id: id,
              #tempRelays: tempRelays,
              #targetRelays: targetRelays,
              #relayTypes: relayTypes,
              #sendAfterAuth: sendAfterAuth,
            },
          ),
        ),
      ) as String);

  @override
  void unsubscribe(String? id) => super.noSuchMethod(
        Invocation.method(
          #unsubscribe,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<List<_i9.Event>> queryEvents(
    List<Map<String, dynamic>>? filters, {
    String? id,
    List<String>? tempRelays,
    List<String>? targetRelays,
    List<int>? relayTypes = const [
      1,
      2,
      3,
      4,
    ],
    bool? sendAfterAuth = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryEvents,
          [filters],
          {
            #id: id,
            #tempRelays: tempRelays,
            #targetRelays: targetRelays,
            #relayTypes: relayTypes,
            #sendAfterAuth: sendAfterAuth,
          },
        ),
        returnValue: _i8.Future<List<_i9.Event>>.value(<_i9.Event>[]),
      ) as _i8.Future<List<_i9.Event>>);

  @override
  String query(
    List<Map<String, dynamic>>? filters,
    dynamic Function(_i9.Event)? onEvent, {
    String? id,
    Function? onComplete,
    List<String>? tempRelays,
    List<String>? targetRelays,
    List<int>? relayTypes = const [
      1,
      2,
      3,
      4,
    ],
    bool? sendAfterAuth = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [
            filters,
            onEvent,
          ],
          {
            #id: id,
            #onComplete: onComplete,
            #tempRelays: tempRelays,
            #targetRelays: targetRelays,
            #relayTypes: relayTypes,
            #sendAfterAuth: sendAfterAuth,
          },
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #query,
            [
              filters,
              onEvent,
            ],
            {
              #id: id,
              #onComplete: onComplete,
              #tempRelays: tempRelays,
              #targetRelays: targetRelays,
              #relayTypes: relayTypes,
              #sendAfterAuth: sendAfterAuth,
            },
          ),
        ),
      ) as String);

  @override
  String queryByFilters(
    Map<String, List<Map<String, dynamic>>>? filtersMap,
    dynamic Function(_i9.Event)? onEvent, {
    String? id,
    Function? onComplete,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryByFilters,
          [
            filtersMap,
            onEvent,
          ],
          {
            #id: id,
            #onComplete: onComplete,
          },
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #queryByFilters,
            [
              filtersMap,
              onEvent,
            ],
            {
              #id: id,
              #onComplete: onComplete,
            },
          ),
        ),
      ) as String);

  @override
  _i8.Future<bool> addRelay(
    _i3.Relay? relay, {
    bool? autoSubscribe = false,
    bool? init = false,
    int? relayType = 1,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRelay,
          [relay],
          {
            #autoSubscribe: autoSubscribe,
            #init: init,
            #relayType: relayType,
          },
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  void removeRelay(
    String? url, {
    int? relayType = 1,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #removeRelay,
          [url],
          {#relayType: relayType},
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i3.Relay> activeRelays() => (super.noSuchMethod(
        Invocation.method(
          #activeRelays,
          [],
        ),
        returnValue: <_i3.Relay>[],
      ) as List<_i3.Relay>);

  @override
  _i3.Relay? getRelay(String? url) => (super.noSuchMethod(Invocation.method(
        #getRelay,
        [url],
      )) as _i3.Relay?);

  @override
  _i3.Relay? getTempRelay(String? url) => (super.noSuchMethod(Invocation.method(
        #getTempRelay,
        [url],
      )) as _i3.Relay?);

  @override
  void reconnect() => super.noSuchMethod(
        Invocation.method(
          #reconnect,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> getExtralReadableRelays(
    List<String>? extraRelays,
    int? maxRelayNum,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExtralReadableRelays,
          [
            extraRelays,
            maxRelayNum,
          ],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  void removeTempRelay(String? addr) => super.noSuchMethod(
        Invocation.method(
          #removeTempRelay,
          [addr],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool readable() => (super.noSuchMethod(
        Invocation.method(
          #readable,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool writable() => (super.noSuchMethod(
        Invocation.method(
          #writable,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isReadOnly() => (super.noSuchMethod(
        Invocation.method(
          #isReadOnly,
          [],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [FirebaseMessaging].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseMessaging extends _i1.Mock implements _i11.FirebaseMessaging {
  MockFirebaseMessaging() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_2(
          this,
          Invocation.getter(#app),
        ),
      ) as _i4.FirebaseApp);

  @override
  set app(_i4.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isAutoInitEnabled => (super.noSuchMethod(
        Invocation.getter(#isAutoInitEnabled),
        returnValue: false,
      ) as bool);

  @override
  _i8.Stream<String> get onTokenRefresh => (super.noSuchMethod(
        Invocation.getter(#onTokenRefresh),
        returnValue: _i8.Stream<String>.empty(),
      ) as _i8.Stream<String>);

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i8.Future<_i5.RemoteMessage?> getInitialMessage() => (super.noSuchMethod(
        Invocation.method(
          #getInitialMessage,
          [],
        ),
        returnValue: _i8.Future<_i5.RemoteMessage?>.value(),
      ) as _i8.Future<_i5.RemoteMessage?>);

  @override
  _i8.Future<void> deleteToken() => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<String?> getAPNSToken() => (super.noSuchMethod(
        Invocation.method(
          #getAPNSToken,
          [],
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<String?> getToken({String? vapidKey}) => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
          {#vapidKey: vapidKey},
        ),
        returnValue: _i8.Future<String?>.value(),
      ) as _i8.Future<String?>);

  @override
  _i8.Future<bool> isSupported() => (super.noSuchMethod(
        Invocation.method(
          #isSupported,
          [],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i5.NotificationSettings> getNotificationSettings() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationSettings,
          [],
        ),
        returnValue: _i8.Future<_i5.NotificationSettings>.value(
            _FakeNotificationSettings_3(
          this,
          Invocation.method(
            #getNotificationSettings,
            [],
          ),
        )),
      ) as _i8.Future<_i5.NotificationSettings>);

  @override
  _i8.Future<_i5.NotificationSettings> requestPermission({
    bool? alert = true,
    bool? announcement = false,
    bool? badge = true,
    bool? carPlay = false,
    bool? criticalAlert = false,
    bool? provisional = false,
    bool? sound = true,
    bool? providesAppNotificationSettings = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestPermission,
          [],
          {
            #alert: alert,
            #announcement: announcement,
            #badge: badge,
            #carPlay: carPlay,
            #criticalAlert: criticalAlert,
            #provisional: provisional,
            #sound: sound,
            #providesAppNotificationSettings: providesAppNotificationSettings,
          },
        ),
        returnValue: _i8.Future<_i5.NotificationSettings>.value(
            _FakeNotificationSettings_3(
          this,
          Invocation.method(
            #requestPermission,
            [],
            {
              #alert: alert,
              #announcement: announcement,
              #badge: badge,
              #carPlay: carPlay,
              #criticalAlert: criticalAlert,
              #provisional: provisional,
              #sound: sound,
              #providesAppNotificationSettings: providesAppNotificationSettings,
            },
          ),
        )),
      ) as _i8.Future<_i5.NotificationSettings>);

  @override
  _i8.Future<void> sendMessage({
    String? to,
    Map<String, String>? data,
    String? collapseKey,
    String? messageId,
    String? messageType,
    int? ttl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [],
          {
            #to: to,
            #data: data,
            #collapseKey: collapseKey,
            #messageId: messageId,
            #messageType: messageType,
            #ttl: ttl,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setAutoInitEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setAutoInitEnabled,
          [enabled],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setDeliveryMetricsExportToBigQuery(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDeliveryMetricsExportToBigQuery,
          [enabled],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> setForegroundNotificationPresentationOptions({
    bool? alert = false,
    bool? badge = false,
    bool? sound = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setForegroundNotificationPresentationOptions,
          [],
          {
            #alert: alert,
            #badge: badge,
            #sound: sound,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> subscribeToTopic(String? topic) => (super.noSuchMethod(
        Invocation.method(
          #subscribeToTopic,
          [topic],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> unsubscribeFromTopic(String? topic) => (super.noSuchMethod(
        Invocation.method(
          #unsubscribeFromTopic,
          [topic],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}
