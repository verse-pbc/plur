source 'https://cdn.cocoapods.org/'
# Uncomment this line to define a global platform for your project
platform :ios, '15.5'

# add this line:
$iOSVersion = '15.5'

# Suppress master specs repo warning
install! 'cocoapods', :warn_for_unused_master_specs_repo => false

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # Remove explicit cryptography_flutter pod and let Flutter handle it
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  # Pin to a specific Sentry version known to work with Xcode 16.3 & iOS 18.4 SDK
  pod 'Sentry', '~> 8.15.0'
  
  # Use available versions of MLKit packages
  pod 'GoogleMLKit/Translate', '7.0.0'
end

post_install do |installer|
  installer.pods_project.build_configurations.each do |config|
    config.build_settings["EXCLUDED_ARCHS[sdk=*]"] = "armv7"
    config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = $iOSVersion
    
    # Set C++ standard globally for all targets
    config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
    config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
    config.build_settings['OTHER_CPLUSPLUSFLAGS'] = "$(OTHER_CFLAGS) -Wno-error=deprecated-builtins -Wno-error=deprecated-declarations -Wno-error=c++17-extensions"
  end

  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Remove the problematic C++ exception monitor source file from Sentry pod
    if target.name == 'Sentry'
      files_to_remove = [
        'SentryCrashMonitor_CPPException.cpp',
        'ThreadMetadataCache.cpp',
        'SentryCrashStackEntryMapper.cpp'
      ]
      
      puts "Checking Sentry target source files for removal: #{files_to_remove}"
      
      files_removed_count = 0
      target.source_build_phase.files.to_a.each do |build_file|
        file_path = build_file.file_ref.path
        files_to_remove.each do |file_to_remove|
          if file_path.end_with?(file_to_remove)
            target.source_build_phase.remove_build_file(build_file)
            puts "Removed #{file_path} from Sentry target sources."
            files_removed_count += 1
            break # Move to next build_file once a match is found and removed
          end
        end
      end
      puts "Removed #{files_removed_count} file(s) from Sentry target."
    end
    
    # Configure all targets to use frameworks
    target.build_configurations.each do |config|
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['SWIFT_VERSION'] = '5.0'
      config.build_settings['DEFINES_MODULE'] = 'YES'
      config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
      config.build_settings['SWIFT_INSTALL_OBJC_HEADER'] = 'YES'
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      
      # Fix Sentry C++ compatibility issues more aggressively
      if target.name.include?('Sentry') || target.name.include?('sentry')
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'SENTRY_NO_THREAD_PROFILING=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'SENTRY_TARGET_PROFILING_SUPPORTED=0'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = "$(OTHER_CFLAGS) -Wno-error=deprecated-builtins -Wno-error=deprecated-declarations -Wno-c++17-extensions -Wno-nullability-completeness -Wno-expansion-to-defined"
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
      end
      
      # Architecture compatibility settings
      if Gem::Version.new($iOSVersion) > Gem::Version.new(config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'])
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = $iOSVersion
      end
      
      # Support both architectures for the simulator
      if config.build_settings['SDKROOT'] == 'iphonesimulator'
        config.build_settings['ARCHS'] = 'arm64 x86_64'
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = ''
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
      end
      
      # Fix build settings that might cause issues
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
        '$(inherited)',
        'PERMISSION_CAMERA=1',
        'PERMISSION_PHOTOS=1',
        'PERMISSION_MICROPHONE=1',
        'PERMISSION_NOTIFICATIONS=1'
      ]
    end
  end
  
  puts "âœ… All pods installed!"
end
