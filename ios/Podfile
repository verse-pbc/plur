source 'https://cdn.cocoapods.org/'
# Uncomment this line to define a global platform for your project
platform :ios, '15.5'

# add this line:
$iOSVersion = '15.5'

# Suppress master specs repo warning
install! 'cocoapods', :warn_for_unused_master_specs_repo => false

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  pod 'cryptography_flutter', :path => '.symlinks/plugins/cryptography_flutter/ios'
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  # Use available versions of MLKit packages
  pod 'GoogleMLKit/Translate', '7.0.0'
end

post_install do |installer|
  installer.pods_project.build_configurations.each do |config|
    config.build_settings["EXCLUDED_ARCHS[sdk=*]"] = "armv7"
    config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = $iOSVersion
  end

  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    if target.name == 'cryptography_flutter'
      target.build_configurations.each do |config|
        config.build_settings['DEFINES_MODULE'] = 'YES'
        config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      end
      # Copy module map into the cryptography_flutter source directory to ensure module availability.
      require 'fileutils'
      module_map_src = File.join(File.dirname(__FILE__), 'cryptography_flutter.modulemap')
      module_map_dest = File.join(target.pod_target_srcroot, 'module.modulemap')
      if File.exist?(module_map_src)
        FileUtils.cp(module_map_src, module_map_dest)
        puts "Copied cryptography_flutter.modulemap to #{module_map_dest}"
      else
        puts "cryptography_flutter.modulemap not found at #{module_map_src}"
      end
    end
    
    # Architecture compatibility settings
    target.build_configurations.each do |config|
      if Gem::Version.new($iOSVersion) > Gem::Version.new(config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'])
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = $iOSVersion
      end
      
      # Support both architectures for the simulator
      if config.build_settings['SDKROOT'] == 'iphonesimulator'
        config.build_settings['ARCHS'] = 'arm64 x86_64'
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = ''
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
      end
      
      # Fix build settings that might cause issues
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
        '$(inherited)',
        'PERMISSION_CAMERA=1', # Add permissions needed by your app
        'PERMISSION_PHOTOS=1',
        'PERMISSION_MICROPHONE=1',
        'PERMISSION_NOTIFICATIONS=1'
      ]
    end
  end
end
