# Task ID: 43
# Title: Task #43: Conditionally Display Zap Icons Based on NWC Wallet Setup
# Status: pending
# Dependencies: None
# Priority: medium
# Description: Modify the application to only display zap icons when the user has successfully set up a Nostr Wallet Connect (NWC) wallet, hiding this functionality from users without a configured wallet.
# Details:
This task requires modifying the UI components that display zap icons throughout the application to make them conditional on the user's wallet status. Implementation steps include:

1. Identify all locations where zap icons are currently displayed in the UI (posts, comments, profiles, etc.)
2. Create or modify the existing wallet status check functionality to reliably determine if a user has set up an NWC wallet
3. Implement a conditional rendering mechanism that checks the wallet status before displaying zap icons
4. Update the relevant components to use this conditional logic
5. Ensure the UI gracefully handles the absence of zap icons without creating layout issues
6. Consider adding a tooltip or small notification that explains why zap icons aren't visible for users without a wallet
7. Update any related documentation to explain this conditional behavior
8. Ensure the wallet status check is efficient and doesn't cause performance issues, especially on pages with multiple zap icons

The implementation should maintain a consistent user experience while clearly indicating the relationship between wallet setup and zapping functionality.

# Test Strategy:
Testing should verify that zap icons appear and function correctly only when appropriate:

1. Unit tests:
   - Test the wallet status detection function with various wallet states
   - Verify conditional rendering logic in isolation
   - Test UI components with and without wallet configuration

2. Integration tests:
   - Verify that zap icons are hidden when no NWC wallet is configured
   - Confirm zap icons appear when a valid NWC wallet is set up
   - Test the transition between these states (setting up a wallet should make icons appear)

3. End-to-end tests:
   - Complete user flows with and without wallet setup
   - Verify all pages maintain proper layout regardless of zap icon visibility

4. Manual testing:
   - Test on multiple devices and screen sizes to ensure responsive design isn't broken
   - Verify that adding a wallet immediately updates the UI to show zap icons without requiring a page refresh
   - Test edge cases like disconnecting a wallet to ensure icons disappear appropriately

5. Accessibility testing:
   - Ensure any tooltips or explanatory elements are accessible
   - Verify that the conditional display doesn't affect screen reader functionality

Document all test cases and results, including screenshots of the UI both with and without zap icons visible.

# Subtasks:
## 1. Audit Zap Icon Usage Across the Application [pending]
### Dependencies: None
### Description: Identify and document all UI components and locations where zap icons are currently displayed, including posts, comments, profiles, and any other relevant sections.
### Details:
Perform a thorough review of the codebase and UI to ensure no zap icon usage is missed. Create a comprehensive list or map of all instances.

## 2. Enhance Wallet Status Check Functionality [pending]
### Dependencies: 43.1
### Description: Develop or refine a reliable mechanism to determine if a user has successfully set up an NWC wallet.
### Details:
Ensure the wallet status check is accurate, efficient, and accessible to all components that require it. Consider edge cases such as partially configured wallets or errors in wallet setup.

## 3. Implement Conditional Rendering for Zap Icons [pending]
### Dependencies: 43.2
### Description: Modify zap icon components to render only when the wallet status check confirms a configured NWC wallet.
### Details:
Use React conditional rendering patterns (e.g., &&, ternary operator, or returning null) to hide zap icons when appropriate, ensuring no unnecessary DOM elements are rendered.

## 4. Update UI Components and Handle Layout Gracefully [pending]
### Dependencies: 43.3
### Description: Refactor affected UI components to ensure the absence of zap icons does not disrupt layout or user experience, and optionally add a tooltip or notification explaining their absence.
### Details:
Adjust spacing, alignment, and any related UI logic. If zap icons are hidden, provide a clear, non-intrusive explanation (e.g., tooltip or small message) for users without a wallet.

## 5. Update Documentation and Optimize Performance [pending]
### Dependencies: 43.4
### Description: Revise developer and user documentation to reflect the new conditional zap icon behavior, and ensure the wallet status check does not introduce performance issues.
### Details:
Document the conditional logic and user experience changes. Profile the application to confirm that wallet status checks are efficient, especially on pages with multiple zap icons.

